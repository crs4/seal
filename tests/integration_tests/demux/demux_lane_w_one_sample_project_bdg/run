#!/usr/bin/env python

# Copyright (C) 2011-2012 CRS4.
#
# This file is part of Seal.
#
# Seal is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# Seal is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with Seal.  If not, see <http://www.gnu.org/licenses/>.

#########################################################
# You need a working Hadoop cluster to use this.
#########################################################


import site
import os
import sys

IntegrationTestDir = os.path.realpath(os.path.join(os.path.dirname(__file__), "..", ".."))
site.addsitedir(IntegrationTestDir)

from seal_integration_test import SealIntegrationTest, SealTestException
import pydoop.hdfs as hdfs

class TestSimpleDemux(SealIntegrationTest):
    def __init__(self):
        super(TestSimpleDemux, self).__init__( os.path.realpath(os.path.dirname(__file__)) )

    def setup(self):
        super(TestSimpleDemux, self).setup()
        hdfs.put(os.path.join(self.test_dir, "sample_sheet1.csv"), self.make_hdfs_test_path())


    def convert_demux_output_to_qseq(self, in_dir, out_dir):
        sample_dir = os.path.join(in_dir, "MyProject", "csct_007107")
        if not hdfs.path.isdir(sample_dir):
            raise SealTestException("sample directory %s doesn't exist" % sample_dir)
        cwd = os.getcwd()
        bdg2qseq_dir = os.path.realpath(os.path.join(IntegrationTestDir, '..', '..', 'examples', 'prq_adam'))
        try:
            self.logger.debug("Switching dir to %s", bdg2qseq_dir)
            os.chdir(bdg2qseq_dir)
            cmd = ['./bdg2qseq', sample_dir, out_dir]
            self.logger.debug("Running bdg2qseq...cmd: %s", cmd)
            self.run_cmd_and_output_if_failure(cmd)
        finally:
            os.chdir(cwd)

    def run_program(self, hdfs_input, hdfs_output):
        hdfs_dir = self.make_hdfs_test_path()
        intermediate_dir = os.path.join(hdfs_dir, 'tmp')
        cmd = [ "%s/scripts/seal" % self.seal_dir, "demux" ]
        cmd.extend( (
            "--sample-sheet", os.path.join(self.make_hdfs_test_path(), "sample_sheet1.csv"),
            "-Dmapred.child.java.opts=-Xmx512m",
            "--output-format", "bdg",
            hdfs_input, intermediate_dir))
        self.run_cmd_and_output_if_failure(cmd)

        self.logger.info("Converting bdg to qseq")
        self.convert_demux_output_to_qseq(intermediate_dir, hdfs_output)

if __name__ == '__main__':
    success = TestSimpleDemux().test_method()
    sys.exit( 0 if success else 1 )
