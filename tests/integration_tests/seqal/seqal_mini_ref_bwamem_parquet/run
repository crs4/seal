#!/usr/bin/env python

# Copyright (C) 2011-2012 CRS4.
#
# This file is part of Seal.
#
# Seal is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# Seal is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with Seal.  If not, see <http://www.gnu.org/licenses/>.

#########################################################
# You need a working Hadoop cluster to use this.
#########################################################


import os
import site
import sys

import pydoop.hdfs

IntegrationTestDir = os.path.realpath(os.path.join(os.path.dirname(__file__), "..", ".."))
site.addsitedir(IntegrationTestDir)

from seal_integration_test import SealIntegrationTest
import tseal.test_utils as tseal_utils

class SeqalMiniRefBwaMem(SealIntegrationTest):
    def __init__(self):
        SealIntegrationTest.__init__(self, os.path.realpath(os.path.dirname(__file__)) )

    def run_program(self, hdfs_input, hdfs_output):
        ref_archive = os.path.join(tseal_utils.MiniRefMemDir, 'mini_ref_bwamem_0.7.8.tar')
        hdfs_dir = self.make_hdfs_test_path()
        remote_ref = pydoop.hdfs.path.join(hdfs_dir, os.path.basename(ref_archive))
        self.log("uploading reference to HDFS path %s", remote_ref)
        pydoop.hdfs.put(
                os.path.join(self.get_test_dir(), ref_archive),
                remote_ref)
        self.log("Running alignment")
        cmd = ["%s/scripts/seal" % self.seal_dir, "seqal",

                "--align-only",
                "--input-format", "bdg",
        ]
        if self.options.debug:
            cmd.extend(('-D', 'seal.seqal.log.level=DEBUG') )

        cmd.extend( (hdfs_input, hdfs_output, remote_ref))
        self.logger.debug("Command: %s", " ".join(cmd))

        self.run_cmd_and_output_if_failure(cmd)

if __name__ == '__main__':
    success = SeqalMiniRefBwaMem().test_method()
    sys.exit( 0 if success else 1 )
